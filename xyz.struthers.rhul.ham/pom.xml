<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>xyz.struthers.rhul.ham</groupId>
	<artifactId>xyz.struthers.rhul.ham</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Computational Heterogeneous Agent Model</name>
	<description>MSc International Management dissertation model</description>
	<inceptionYear>2018</inceptionYear>
	<developers>
		<developer>
			<id>adam</id>
			<name>Adam Struthers</name>
			<email>acstruthers@gmail.com</email>
			<roles>
				<role>owner</role>
				<role>developer</role>
			</roles>
			<timezone>+10</timezone>
		</developer>
	</developers>
	<repositories>
		<repository>
			<!-- needed for com.esotericsoftware.kryo -->
			<id>sonatype-snapshots</id>
			<name>sonatype snapshots repo</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>
		<repository>
			<!-- needed for kryonet.kryonet -->
			<id>clojars</id>
			<url>http://clojars.org/repo/</url>
		</repository>
	</repositories>

	<properties>
		<!-- Stops the following error message, per https://maven.apache.org/general.html: 
			"[WARNING] Using platform encoding (Cp1252 actually) to copy filtered resources, 
			i.e. build is platform dependent!" -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding> -->

		<version.java>11</version.java><!-- Glassfish 5 is only compatible with 
			Java 8, so don't use 9+ yet -->
		<version.maven-compiler-plugin>3.8.0</version.maven-compiler-plugin><!-- 
			3.5.x for Java 8 -->
		<version.aspectj-maven-plugin>1.11</version.aspectj-maven-plugin><!-- AspectJ 
			weaver plugin 7 is for Java 8 (version 1.6 is for Java 7) -->
		<version.aspectj>1.9.2</version.aspectj>
		<version.aspectjlib>1.6.2</version.aspectjlib>
		<version.org.springframework>5.2.24.RELEASE</version.org.springframework>
		<version.org.springframework.boot>2.1.2.RELEASE</version.org.springframework.boot>

		<version.maven>3.6.0</version.maven>
		<version.maven-enforcer-plugin>3.0.0-M2</version.maven-enforcer-plugin>
		<version.maven-remote-resources-plugin>1.6.0</version.maven-remote-resources-plugin>

		<version.edu.gmu.cs.mason>19.0</version.edu.gmu.cs.mason><!-- the repository 
			only has v14.0, so copy the JAR file for v19.0 manually -->
		<version.it.unimi.dsi.dsiutils>2.5.4</version.it.unimi.dsi.dsiutils>
		<version.ejml-core>0.37.1</version.ejml-core>
		<version.de.ruedigermoeller.fst>2.57</version.de.ruedigermoeller.fst>
		<version.com.esotericsoftware.kryo>5.0.0-RC4-SNAPSHOT</version.com.esotericsoftware.kryo>
		<version.kryonet.kryonet>2.21</version.kryonet.kryonet>
		<version.com.nqzero.permit-reflect>0.3</version.com.nqzero.permit-reflect>
		<version.net.sf.trove4j>3.1.0</version.net.sf.trove4j>

		<version.mysql>8.0.15</version.mysql>
		<version.eclipse.persistence.eclipselink>2.7.4</version.eclipse.persistence.eclipselink>
		<version.eclipse.persistence.javax.persistence>2.2.1</version.eclipse.persistence.javax.persistence>
		<version.apache.commons-lang3>3.8.1</version.apache.commons-lang3>

		<version.shiro>1.4.0</version.shiro>
		<version.google.guava>27.0-jre</version.google.guava><!-- 27.0.1-jre -->
		<version.opencsv>4.5</version.opencsv>
		<version.javax.xml.bind.jaxb-api>2.3.1</version.javax.xml.bind.jaxb-api>
		<version.javax.activation>1.1.1</version.javax.activation>
		<version.org.glassfish.jaxb.jaxb-runtime>2.3.2</version.org.glassfish.jaxb.jaxb-runtime>
		<version.slf4j>1.8.0-beta2</version.slf4j>
		<version.logback>1.3.0-alpha4</version.logback>
		<version.jcl>1.2</version.jcl><!-- commons-logging -->
		<version.groovy>3.0.0-alpha-4</version.groovy><!-- need Groovy to use a 
			*.groovy config file instead of XML config file -->

		<version.junit>4.13-beta-2</version.junit>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Spring dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.org.springframework}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${version.org.springframework}</version>
				<!-- <scope>runtime</scope> -->
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${version.org.springframework}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${version.org.springframework}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot</artifactId>
				<version>${version.org.springframework.boot}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${version.org.springframework.boot}</version>
			</dependency>

			<!-- Simulation-specific libraries -->
			<!-- Trove implements JAva Collections for primitives -->
			<dependency>
				<groupId>net.sf.trove4j</groupId>
				<artifactId>core</artifactId>
				<version>${version.net.sf.trove4j}</version>
			</dependency>
			<dependency>
				<groupId>edu.gmu.cs</groupId>
				<artifactId>mason</artifactId>
				<version>${version.edu.gmu.cs.mason}</version>
			</dependency>
			<dependency>
				<groupId>it.unimi.dsi</groupId>
				<artifactId>dsiutils</artifactId>
				<version>${version.it.unimi.dsi.dsiutils}</version>
			</dependency>
			<dependency>
				<groupId>de.ruedigermoeller</groupId>
				<artifactId>fst</artifactId>
				<version>${version.de.ruedigermoeller.fst}</version>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>kryo</artifactId>
				<version>${version.com.esotericsoftware.kryo}</version>
			</dependency>
			<dependency>
				<groupId>kryonet</groupId>
				<artifactId>kryonet</artifactId>
				<version>${version.kryonet.kryonet}</version>
			</dependency>
			<dependency>
				<groupId>com.nqzero</groupId>
				<artifactId>permit-reflect</artifactId>
				<version>${version.com.nqzero.permit-reflect}</version>
			</dependency>


			<!-- Matrix maths -->
			<!-- http://ejml.org/wiki/index.php?title=Main_Page -->
			<!-- <dependency> <groupId>org.ejml</groupId> <artifactId>ejml-core</artifactId> 
				<version>${version.ejml-core}</version> </dependency> -->

			<!-- JPA dependencies -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${version.mysql}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>eclipselink</artifactId>
				<version>${version.eclipse.persistence.eclipselink}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>javax.persistence</artifactId>
				<version>${version.eclipse.persistence.javax.persistence}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${version.apache.commons-lang3}</version>
			</dependency>
			<!-- <dependency> <groupId>org.eclipse.persistence</groupId> <artifactId>org.eclipse.persistence.jpa</artifactId> 
				<version>2.7.3</version><!- was 2.6.2 -> </dependency> -->

			<!-- AOP dependencies -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjlib</artifactId>
				<version>${version.aspectjlib}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${version.aspectj}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${version.aspectj}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${version.aspectj}</version>
			</dependency>

			<!-- security dependencies -->
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-all</artifactId>
				<version>${version.shiro}</version>
			</dependency>

			<!-- comms dependencies -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.google.guava}</version>
			</dependency>
			<dependency>
				<groupId>com.opencsv</groupId>
				<artifactId>opencsv</artifactId>
				<version>${version.opencsv}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api -->
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${version.javax.xml.bind.jaxb-api}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/javax.activation/activation -->
			<dependency>
				<groupId>javax.activation</groupId>
				<artifactId>activation</artifactId>
				<version>${version.javax.activation}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.glassfish.jaxb/jaxb-runtime -->
			<dependency>
				<groupId>org.glassfish.jaxb</groupId>
				<artifactId>jaxb-runtime</artifactId>
				<version>${version.org.glassfish.jaxb.jaxb-runtime}</version>
			</dependency>

			<!-- logging dependencies -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${version.slf4j}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${version.logback}</version>
			</dependency>
			<dependency>
				<!-- need Groovy to use a *.groovy config file instead of XML config 
					file -->
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${version.groovy}</version>
			</dependency>
			<!-- exclude Commons Logging (JCL) by declaring it in 'provided' scope, 
				then using jcl-over-slf4j -->
			<!-- http://www.slf4j.org/faq.html#excludingJCL -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${version.jcl}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${version.slf4j}</version>
			</dependency>

			<!-- testing dependencies -->
			<!-- https://junit.org/junit5/docs/current/user-guide/ -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${version.org.springframework}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- <dependency> <groupId>javax.annotation</groupId> <artifactId>javax.annotation-api</artifactId> 
			<version>1.3.2</version> </dependency> -->

		<!-- Spring dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Simulation-specific libraries -->
		<dependency>
			<groupId>net.sf.trove4j</groupId>
			<artifactId>core</artifactId>
		</dependency>
		<dependency>
			<groupId>edu.gmu.cs</groupId>
			<artifactId>mason</artifactId>
		</dependency>
		<dependency>
			<groupId>it.unimi.dsi</groupId>
			<artifactId>dsiutils</artifactId>
		</dependency>
		<dependency>
			<groupId>de.ruedigermoeller</groupId>
			<artifactId>fst</artifactId>
		</dependency>
		<dependency>
			<groupId>com.esotericsoftware</groupId>
			<artifactId>kryo</artifactId>
		</dependency>
		<dependency>
			<groupId>kryonet</groupId>
			<artifactId>kryonet</artifactId>
		</dependency>
		<dependency>
			<groupId>com.nqzero</groupId>
			<artifactId>permit-reflect</artifactId>
		</dependency>

		<!-- AOP dependencies -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjlib</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
		</dependency>

		<!-- comms dependencies -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>com.opencsv</groupId>
			<artifactId>opencsv</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>activation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>

		<!-- logging dependencies -->
		<!-- <dependency> <groupId>org.slf4j</groupId> <artifactId>slf4j-api</artifactId> 
			</dependency> <dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-classic</artifactId> 
			</dependency> <dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-core</artifactId> 
			</dependency> -->
		<!-- <dependency> <groupId>commons-logging</groupId> <artifactId>commons-logging-api</artifactId> 
			</dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-api</artifactId> 
			</dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-core</artifactId> 
			</dependency> <dependency> <groupId>org.apache.logging.log4j</groupId> <artifactId>log4j-jcl</artifactId> 
			</dependency> -->

		<!-- testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- https://stackoverflow.com/questions/6352208/how-to-solve-plugin-execution-not-covered-by-lifecycle-configuration-for-sprin -->
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>aspectj-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>test-compile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>



				<!-- Java 8 SE compiler plugin -->
				<plugin>
					<!-- https://stackoverflow.com/questions/49398894/unable-to-compile-simple-java-10-java-11-project-with-maven/51586202#51586202 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.maven-compiler-plugin}</version>
					<configuration>
						<release>${version.java}</release>
						<source>${version.java}</source>
						<target>${version.java}</target>
						<verbose>true</verbose>
						<fork>true</fork>
					</configuration>
				</plugin>

				<!-- Maven enforcer plugin -->
				<plugin>
					<!-- Helps to ensure that the build environment complies with certain 
						prerequisites. This can minimise/avoid silly little bugs with incomprehensible 
						error messages. https://maven.apache.org/enforcer/maven-enforcer-plugin/usage.html -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${version.maven-enforcer-plugin}</version>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
							<configuration>
								<rules>
									<requireMavenVersion>
										<version>${version.maven}</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${version.java}</version>
									</requireJavaVersion>
									<requireOS>
										<family>windows</family><!-- should use profiles for POM variables 
											rather than requireOS -->
									</requireOS>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Maven plugins -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>

			<!-- This plugin helps finding the latest plugin or dependency versions 
				for your modules. Open up the terminal and execute this command to find the 
				plugin versions you have to update: mvn versions:display-plugin-updates You 
				will see a list of plugins used in your project with newer versions available. 
				Update all of those plugins to the lastest stable version. After you've updated 
				your plugin versions make sure that your project still compiles and runs 
				properly. -->
			<!-- https://winterbe.com/posts/2018/08/29/migrate-maven-projects-to-java-11-jigsaw/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<generateBackupPoms>false</generateBackupPoms>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>